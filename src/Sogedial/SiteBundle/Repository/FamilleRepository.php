<?php

namespace Sogedial\SiteBundle\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * FamilleRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class FamilleRepository extends EntityRepository
{
    /**
     * @param $codeRayon
     * @return array
     */
    public function getAllFamillesOfRayon($codeRayon) {
        $qb = $this->_em->createQueryBuilder();

        $result = $qb
            ->select('f.code, f.libelle')
            ->from('SogedialSiteBundle:Famille', 'f')
            ->where('f.rayon = :codeRayon')
            ->orderBy('f.libelle', 'ASC')
            ->setParameter('codeRayon', $codeRayon)
            ->getQuery()
            ->getArrayResult()
        ;

        return $result;
    }

    public function findAllFamille($user, $type, $locale)
    {

        if ($type == 1) {
            $query = 'SELECT f1, count(f1.id)
        FROM SogedialSiteBundle:Famille f1
        LEFT JOIN f1.children f2
        LEFT JOIN f2.children f3
        LEFT JOIN f3.children f4
        LEFT JOIN f4.children f5
        LEFT JOIN f5.produits p
        WHERE f1.type = :type
        AND p.id IS NOT NULL AND p.actif=1 ';
            $lvl = 'f1';
        } elseif ($type == 2) {
            $query = 'SELECT f2, count(f2.id)
        FROM SogedialSiteBundle:Famille f2
        LEFT JOIN f2.parent f1
        LEFT JOIN f2.children f3
        LEFT JOIN f3.children f4
        LEFT JOIN f4.children f5
        LEFT JOIN f5.produits p
        WHERE f2.type = :type
        AND p.id IS NOT NULL AND p.actif = 1 ';
            $lvl = 'f2';
        } else {
            $query = 'SELECT f3, count(f3.id)
        FROM SogedialSiteBundle:Famille f3
        LEFT JOIN f3.parent f2
        LEFT JOIN f2.parent f1
        LEFT JOIN f3.children f4
        LEFT JOIN f4.children f5
        LEFT JOIN f5.produits p
        WHERE f3.type = :type
        AND p.id IS NOT NULL AND p.actif=1 ';
            $lvl = 'f3';
        }

        $query .= " AND (f1.id IN (SELECT IDENTITY(s.entity) FROM SogedialUserBundle:FamilySelection s WHERE s.user = :user_id )
                OR f2.id IN (SELECT IDENTITY(s1.entity) FROM SogedialUserBundle:FamilySelection s1 WHERE s1.user = :user_id )
                OR f3.id IN (SELECT IDENTITY(s2.entity) FROM SogedialUserBundle:FamilySelection s2 WHERE s2.user = :user_id )
                OR f4.id IN (SELECT IDENTITY(s3.entity) FROM SogedialUserBundle:FamilySelection s3 WHERE s3.user = :user_id )
                OR f5.id IN (SELECT IDENTITY(s4.entity) FROM SogedialUserBundle:FamilySelection s4 WHERE s4.user = :user_id )
                OR p.id IN (SELECT IDENTITY(s5.entity) FROM SogedialUserBundle:ProductSelection s5 WHERE s5.user = :user_id) ) ";

        $query .= ' GROUP BY ' . $lvl . '.id';

        if ($locale == "fr") {
            $query .= ' ORDER BY ' . $lvl . '.libelleFamille ASC ';
        } else {
            $query .= ' ORDER BY ' . $lvl . '.libelleFamilleEn ASC ';
        }

        return $this->getEntityManager()
            ->createQuery($query)
            ->setParameter('type', $type)
            ->setParameter('user_id', $user->getId())
            ->getResult();


    }

    public function findAllSelectedFamille($user, $type)
    {
        if ($type == 1) {
            $query = 'SELECT f1, count(f1.id)
        FROM SogedialSiteBundle:Famille f1
        LEFT JOIN f1.children f2
        LEFT JOIN f2.children f3
        LEFT JOIN f3.children f4
        LEFT JOIN f4.children f5
        LEFT JOIN f5.produits p
        WHERE f1.type = :type
        AND p.id IN (SELECT psel.id FROM SogedialSiteBundle:UserSelectedProduct usp LEFT JOIN usp.user u LEFT JOIN usp.produit psel WHERE u.id = :user_id )
        AND p.id IS NOT NULL AND p.actif=1 ';
            $lvl = 'f1';
        } elseif ($type == 2) {
            $query = 'SELECT f2, count(f2.id)
        FROM SogedialSiteBundle:Famille f2
        LEFT JOIN f2.parent f1
        LEFT JOIN f2.children f3
        LEFT JOIN f3.children f4
        LEFT JOIN f4.children f5
        LEFT JOIN f5.produits p
        WHERE f2.type = :type
        AND p.id IN (SELECT psel.id FROM SogedialSiteBundle:UserSelectedProduct usp LEFT JOIN usp.user u LEFT JOIN usp.produit psel WHERE u.id = :user_id )
        AND p.id IS NOT NULL AND p.actif=1 ';
            $lvl = 'f2';
        } else {
            $query = 'SELECT f3, count(f3.id)
        FROM SogedialSiteBundle:Famille f3
        LEFT JOIN f3.parent f2
        LEFT JOIN f2.parent f1
        LEFT JOIN f3.children f4
        LEFT JOIN f4.children f5
        LEFT JOIN f5.produits p
        WHERE f3.type = :type
        AND p.id IN (SELECT psel.id FROM SogedialSiteBundle:UserSelectedProduct usp LEFT JOIN usp.user u LEFT JOIN usp.produit psel WHERE u.id = :user_id )
        AND p.id IS NOT NULL AND p.actif=1 ';
            $lvl = 'f3';
        }

        $query .= " AND (f1.id IN (SELECT IDENTITY(s.entity) FROM SogedialUserBundle:FamilySelection s WHERE s.user = :user_id )
                OR f2.id IN (SELECT IDENTITY(s1.entity) FROM SogedialUserBundle:FamilySelection s1 WHERE s1.user = :user_id )
                OR f3.id IN (SELECT IDENTITY(s2.entity) FROM SogedialUserBundle:FamilySelection s2 WHERE s2.user = :user_id )
                OR f4.id IN (SELECT IDENTITY(s3.entity) FROM SogedialUserBundle:FamilySelection s3 WHERE s3.user = :user_id )
                OR f5.id IN (SELECT IDENTITY(s4.entity) FROM SogedialUserBundle:FamilySelection s4 WHERE s4.user = :user_id )
                OR p.id IN (SELECT IDENTITY(s5.entity) FROM SogedialUserBundle:ProductSelection s5 WHERE s5.user = :user_id) ) ";

        $query .= ' GROUP BY ' . $lvl . '.id
                ORDER BY ' . $lvl . '.libelleFamille ASC ';

        return $this->getEntityManager()
            ->createQuery($query)
            ->setParameter('type', $type)
            ->setParameter('user_id', $user->getId())
            ->getResult();
    }

    public function findFamilies()
    {
        return $this->getEntityManager()
            ->createQuery(
                'SELECT f, count(p.id)
                      FROM SogedialSiteBundle:Famille f
                      LEFT JOIN f.children f1
                      LEFT JOIN f1.children f2
                      LEFT JOIN f2.children f3
                      LEFT JOIN f3.children f4
                      JOIN f4.produits p
                      WHERE f.parent IS null AND f.type = 1 AND p.id IS NOT NULL AND p.actif=1
                      GROUP BY f.id
                      ORDER BY f.valeurFamille ASC'
            )
            ->getResult();
    }

    public function findFamiliesByParent($family)
    {
        $parentId = $family->getId();
        switch ($family->getType()) {
            case 1:
                $query = 'SELECT f, count(p.id)
                  FROM SogedialSiteBundle:Famille f
                  LEFT JOIN f.children f1
                  LEFT JOIN f1.children f2
                  LEFT JOIN f2.children f3
                  JOIN f3.produits p
                  WHERE f.parent = :id
                  GROUP BY f.id
                  ORDER BY f.valeurFamille ASC';
                break;
            case 2:
                $query = 'SELECT f, count(p.id)
                  FROM SogedialSiteBundle:Famille f
                  LEFT JOIN f.children f1
                  LEFT JOIN f1.children f2
                  JOIN f2.produits p
                  WHERE f.parent = :id
                  GROUP BY f.id
                  ORDER BY f.valeurFamille ASC';
                break;
            case 3:
                $query = 'SELECT f, count(p.id)
                  FROM SogedialSiteBundle:Famille f
                  LEFT JOIN f.children f1
                  JOIN f1.produits p
                  WHERE f.parent = :id
                  GROUP BY f.id
                  ORDER BY f.valeurFamille ASC';
                break;
            case 4:
                $query = 'SELECT f, count(p.id)
                  FROM SogedialSiteBundle:Famille f
                  JOIN f.produits p
                  WHERE f.parent = :id
                  GROUP BY f.id
                  ORDER BY f.valeurFamille ASC';
                break;

            default :
                return array();
        }
        $result = $this->getEntityManager()
            ->createQuery($query)
            ->setParameter('id', $parentId)
            ->getResult();

        return $result;
    }

    public function findAllFamilleJson($user, $q = '', $options = null)
    {
        $query = 'SELECT f1, count(p.id)
      FROM SogedialSiteBundle:Famille f1
      LEFT JOIN f1.children f2
      LEFT JOIN f2.children f3
      LEFT JOIN f3.children f4
      LEFT JOIN f4.children f5
      LEFT JOIN f5.produits p
      WHERE p.id is not NULL ';
        if ($query != '') {
            $query .= ' AND f1.libelleFamille LIKE :query ';
        }

        $query .= " AND (f1.id IN (SELECT IDENTITY(s.entity) FROM SogedialUserBundle:FamilySelection s WHERE s.user = :user_id " . (($options) ? ' AND s.' . $options . '=1' : '') . ")
                OR f2.id IN (SELECT IDENTITY(s1.entity) FROM SogedialUserBundle:FamilySelection s1 WHERE s1.user = :user_id " . (($options) ? ' AND s1.' . $options . '=1' : '') . ")
                OR f3.id IN (SELECT IDENTITY(s2.entity) FROM SogedialUserBundle:FamilySelection s2 WHERE s2.user = :user_id " . (($options) ? ' AND s2.' . $options . '=1' : '') . ")
                OR f4.id IN (SELECT IDENTITY(s3.entity) FROM SogedialUserBundle:FamilySelection s3 WHERE s3.user = :user_id " . (($options) ? ' AND s3.' . $options . '=1' : '') . ")
                OR f5.id IN (SELECT IDENTITY(s4.entity) FROM SogedialUserBundle:FamilySelection s4 WHERE s4.user = :user_id " . (($options) ? ' AND s4.' . $options . '=1' : '') . ")
                OR p.id IN (SELECT IDENTITY(s5.entity) FROM SogedialUserBundle:ProductSelection s5 WHERE s5.user = :user_id " . (($options) ? ' AND s5.' . $options . '=1' : '') . ") ) ";

        $query .= ' GROUP BY f1.id
                ORDER BY f1.libelleFamille ASC ';

        $rf1 = $this->getEntityManager()
            ->createQuery($query)
            ->setParameter('query', '%' . $q . '%')
            ->setParameter('user_id', $user->getId())
            ->getResult();

        $query = 'SELECT f2, count(p.id)
      FROM SogedialSiteBundle:Famille f2
      LEFT JOIN f2.parent f1
      LEFT JOIN f2.children f3
      LEFT JOIN f3.children f4
      LEFT JOIN f4.children f5
      LEFT JOIN f5.produits p
      WHERE p.id is not NULL
      ';
        if ($query != '') {
            $query .= ' AND f2.libelleFamille LIKE :query ';
        }

        $query .= " AND (f1.id IN (SELECT IDENTITY(s.entity) FROM SogedialUserBundle:FamilySelection s WHERE s.user = :user_id  " . (($options) ? ' AND s.' . $options . '=1' : '') . ")
                OR f2.id IN (SELECT IDENTITY(s1.entity) FROM SogedialUserBundle:FamilySelection s1 WHERE s1.user = :user_id  " . (($options) ? ' AND s1.' . $options . '=1' : '') . ")
                OR f3.id IN (SELECT IDENTITY(s2.entity) FROM SogedialUserBundle:FamilySelection s2 WHERE s2.user = :user_id  " . (($options) ? ' AND s2.' . $options . '=1' : '') . ")
                OR f4.id IN (SELECT IDENTITY(s3.entity) FROM SogedialUserBundle:FamilySelection s3 WHERE s3.user = :user_id  " . (($options) ? ' AND s3.' . $options . '=1' : '') . ")
                OR f5.id IN (SELECT IDENTITY(s4.entity) FROM SogedialUserBundle:FamilySelection s4 WHERE s4.user = :user_id  " . (($options) ? ' AND s4.' . $options . '=1' : '') . ")
                OR p.id IN (SELECT IDENTITY(s5.entity) FROM SogedialUserBundle:ProductSelection s5 WHERE s5.user = :user_id  " . (($options) ? ' AND s5.' . $options . '=1' : '') . ") ) ";

        $query .= ' GROUP BY f2.id
                ORDER BY f2.libelleFamille ASC ';

        $rf2 = $this->getEntityManager()
            ->createQuery($query)
            ->setParameter('query', '%' . $q . '%')
            ->setParameter('user_id', $user->getId())
            ->getResult();


        $query = 'SELECT f3, count(p.id)
      FROM SogedialSiteBundle:Famille f3
      LEFT JOIN f3.parent f2
      LEFT JOIN f2.parent f1
      LEFT JOIN f3.children f4
      LEFT JOIN f4.children f5
      LEFT JOIN f5.produits p
      WHERE p.id is not NULL ';
        if ($query != '') {
            $query .= ' AND f3.libelleFamille LIKE :query ';
        }

        $query .= " AND (f1.id IN (SELECT IDENTITY(s.entity) FROM SogedialUserBundle:FamilySelection s WHERE s.user = :user_id  " . (($options) ? ' AND s.' . $options . '=1' : '') . ")
                OR f2.id IN (SELECT IDENTITY(s1.entity) FROM SogedialUserBundle:FamilySelection s1 WHERE s1.user = :user_id  " . (($options) ? ' AND s1.' . $options . '=1' : '') . ")
                OR f3.id IN (SELECT IDENTITY(s2.entity) FROM SogedialUserBundle:FamilySelection s2 WHERE s2.user = :user_id  " . (($options) ? ' AND s2.' . $options . '=1' : '') . ")
                OR f4.id IN (SELECT IDENTITY(s3.entity) FROM SogedialUserBundle:FamilySelection s3 WHERE s3.user = :user_id  " . (($options) ? ' AND s3.' . $options . '=1' : '') . ")
                OR f5.id IN (SELECT IDENTITY(s4.entity) FROM SogedialUserBundle:FamilySelection s4 WHERE s4.user = :user_id  " . (($options) ? ' AND s4.' . $options . '=1' : '') . ")
                OR p.id IN (SELECT IDENTITY(s5.entity) FROM SogedialUserBundle:ProductSelection s5 WHERE s5.user = :user_id  " . (($options) ? ' AND s5.' . $options . '=1' : '') . ") ) ";

        $query .= ' GROUP BY f3.id
                ORDER BY f3.libelleFamille ASC ';


        $r = $this->getEntityManager()
            ->createQuery($query)
            ->setParameter('query', '%' . $q . '%')
            ->setParameter('user_id', $user->getId());

        $rf3 = $r->getResult();

        $query = 'SELECT f4, count(p.id)
      FROM SogedialSiteBundle:Famille f4
      LEFT JOIN f4.parent f3
      LEFT JOIN f3.parent f2
      LEFT JOIN f2.parent f1
      LEFT JOIN f4.children f5
      LEFT JOIN f5.produits p
      WHERE p.id is not NULL ';
        if ($query != '') {
            $query .= ' AND f4.libelleFamille LIKE :query ';
        }

        $query .= " AND (f1.id IN (SELECT IDENTITY(s.entity) FROM SogedialUserBundle:FamilySelection s WHERE s.user = :user_id  " . (($options) ? ' AND s.' . $options . '=1' : '') . ")
                OR f2.id IN (SELECT IDENTITY(s1.entity) FROM SogedialUserBundle:FamilySelection s1 WHERE s1.user = :user_id  " . (($options) ? ' AND s1.' . $options . '=1' : '') . ")
                OR f3.id IN (SELECT IDENTITY(s2.entity) FROM SogedialUserBundle:FamilySelection s2 WHERE s2.user = :user_id  " . (($options) ? ' AND s2.' . $options . '=1' : '') . ")
                OR f4.id IN (SELECT IDENTITY(s3.entity) FROM SogedialUserBundle:FamilySelection s3 WHERE s3.user = :user_id  " . (($options) ? ' AND s3.' . $options . '=1' : '') . ")
                OR f5.id IN (SELECT IDENTITY(s4.entity) FROM SogedialUserBundle:FamilySelection s4 WHERE s4.user = :user_id  " . (($options) ? ' AND s4.' . $options . '=1' : '') . ")
                OR p.id IN (SELECT IDENTITY(s5.entity) FROM SogedialUserBundle:ProductSelection s5 WHERE s5.user = :user_id " . (($options) ? ' AND s5.' . $options . '=1' : '') . ") ) ";

        $query .= ' GROUP BY f4.id
                ORDER BY f4.libelleFamille ASC ';

        $rf4 = $this->getEntityManager()
            ->createQuery($query)
            ->setParameter('query', '%' . $q . '%')
            ->setParameter('user_id', $user->getId())
            ->getResult();

        $query = 'SELECT f5, count(p.id)
      FROM SogedialSiteBundle:Famille f5
      LEFT JOIN f5.parent f4
      LEFT JOIN f4.parent f3
      LEFT JOIN f3.parent f2
      LEFT JOIN f2.parent f1
      LEFT JOIN f5.produits p

      WHERE p.id is not NULL ';
        if ($query != '') {
            $query .= ' AND f5.libelleFamille LIKE :query ';
        }

        $query .= " AND (f1.id IN (SELECT IDENTITY(s.entity) FROM SogedialUserBundle:FamilySelection s WHERE s.user = :user_id  " . (($options) ? ' AND s.' . $options . '=1' : '') . ")
                OR f2.id IN (SELECT IDENTITY(s1.entity) FROM SogedialUserBundle:FamilySelection s1 WHERE s1.user = :user_id  " . (($options) ? ' AND s1.' . $options . '=1' : '') . ")
                OR f3.id IN (SELECT IDENTITY(s2.entity) FROM SogedialUserBundle:FamilySelection s2 WHERE s2.user = :user_id  " . (($options) ? ' AND s2.' . $options . '=1' : '') . ")
                OR f4.id IN (SELECT IDENTITY(s3.entity) FROM SogedialUserBundle:FamilySelection s3 WHERE s3.user = :user_id  " . (($options) ? ' AND s3.' . $options . '=1' : '') . ")
                OR f5.id IN (SELECT IDENTITY(s4.entity) FROM SogedialUserBundle:FamilySelection s4 WHERE s4.user = :user_id  " . (($options) ? ' AND s4.' . $options . '=1' : '') . ")
                OR p.id IN (SELECT IDENTITY(s5.entity) FROM SogedialUserBundle:ProductSelection s5 WHERE s5.user = :user_id  " . (($options) ? ' AND s5.' . $options . '=1' : '') . ") ) ";

        $query .= ' GROUP BY f5.id
                ORDER BY f5.libelleFamille ASC ';

        $rf5 = $this->getEntityManager()
            ->createQuery($query)
            ->setParameter('query', '%' . $q . '%')
            ->setParameter('user_id', $user->getId())
            ->getResult();

        return array_merge($rf1, $rf2, $rf3, $rf4, $rf5);
    }

    public function findAllSelectedFamilleJson($user, $q = '', $options = null)
    {
        $query = 'SELECT f1, count(p.id)
      FROM SogedialSiteBundle:Famille f1
      LEFT JOIN f1.children f2
      LEFT JOIN f2.children f3
      LEFT JOIN f3.children f4
      LEFT JOIN f4.children f5
      LEFT JOIN f5.produits p
      WHERE p.id is not NULL
      AND p.id IN (SELECT psel.id FROM SogedialSiteBundle:UserSelectedProduct usp LEFT JOIN usp.user u LEFT JOIN usp.produit psel WHERE u.id = :user_id )
      ';
        if ($query != '') {
            $query .= ' AND f1.libelleFamille LIKE :query ';
        }

        $query .= " AND (f1.id IN (SELECT IDENTITY(s.entity) FROM SogedialUserBundle:FamilySelection s WHERE s.user = :user_id " . (($options) ? ' AND s.' . $options . '=1' : '') . ")
                OR f2.id IN (SELECT IDENTITY(s1.entity) FROM SogedialUserBundle:FamilySelection s1 WHERE s1.user = :user_id " . (($options) ? ' AND s1.' . $options . '=1' : '') . ")
                OR f3.id IN (SELECT IDENTITY(s2.entity) FROM SogedialUserBundle:FamilySelection s2 WHERE s2.user = :user_id " . (($options) ? ' AND s2.' . $options . '=1' : '') . ")
                OR f4.id IN (SELECT IDENTITY(s3.entity) FROM SogedialUserBundle:FamilySelection s3 WHERE s3.user = :user_id " . (($options) ? ' AND s3.' . $options . '=1' : '') . ")
                OR f5.id IN (SELECT IDENTITY(s4.entity) FROM SogedialUserBundle:FamilySelection s4 WHERE s4.user = :user_id " . (($options) ? ' AND s4.' . $options . '=1' : '') . ")
                OR p.id IN (SELECT IDENTITY(s5.entity) FROM SogedialUserBundle:ProductSelection s5 WHERE s5.user = :user_id " . (($options) ? ' AND s5.' . $options . '=1' : '') . ") ) ";

        $query .= ' GROUP BY f1.id
                ORDER BY f1.libelleFamille ASC ';

        $rf1 = $this->getEntityManager()
            ->createQuery($query)
            ->setParameter('query', '%' . $q . '%')
            ->setParameter('user_id', $user->getId())
            ->getResult();

        $query = 'SELECT f2, count(p.id)
      FROM SogedialSiteBundle:Famille f2
      LEFT JOIN f2.parent f1
      LEFT JOIN f2.children f3
      LEFT JOIN f3.children f4
      LEFT JOIN f4.children f5
      LEFT JOIN f5.produits p
      WHERE p.id is not NULL
      AND p.id IN (SELECT psel.id FROM SogedialSiteBundle:UserSelectedProduct usp LEFT JOIN usp.user u LEFT JOIN usp.produit psel WHERE u.id = :user_id )
      ';
        if ($query != '') {
            $query .= ' AND f2.libelleFamille LIKE :query ';
        }

        $query .= " AND (f1.id IN (SELECT IDENTITY(s.entity) FROM SogedialUserBundle:FamilySelection s WHERE s.user = :user_id  " . (($options) ? ' AND s.' . $options . '=1' : '') . ")
                OR f2.id IN (SELECT IDENTITY(s1.entity) FROM SogedialUserBundle:FamilySelection s1 WHERE s1.user = :user_id  " . (($options) ? ' AND s1.' . $options . '=1' : '') . ")
                OR f3.id IN (SELECT IDENTITY(s2.entity) FROM SogedialUserBundle:FamilySelection s2 WHERE s2.user = :user_id  " . (($options) ? ' AND s2.' . $options . '=1' : '') . ")
                OR f4.id IN (SELECT IDENTITY(s3.entity) FROM SogedialUserBundle:FamilySelection s3 WHERE s3.user = :user_id  " . (($options) ? ' AND s3.' . $options . '=1' : '') . ")
                OR f5.id IN (SELECT IDENTITY(s4.entity) FROM SogedialUserBundle:FamilySelection s4 WHERE s4.user = :user_id  " . (($options) ? ' AND s4.' . $options . '=1' : '') . ")
                OR p.id IN (SELECT IDENTITY(s5.entity) FROM SogedialUserBundle:ProductSelection s5 WHERE s5.user = :user_id  " . (($options) ? ' AND s5.' . $options . '=1' : '') . ") ) ";

        $query .= ' GROUP BY f2.id
                ORDER BY f2.libelleFamille ASC ';

        $rf2 = $this->getEntityManager()
            ->createQuery($query)
            ->setParameter('query', '%' . $q . '%')
            ->setParameter('user_id', $user->getId())
            ->getResult();


        $query = 'SELECT f3, count(p.id)
      FROM SogedialSiteBundle:Famille f3
      LEFT JOIN f3.parent f2
      LEFT JOIN f2.parent f1
      LEFT JOIN f3.children f4
      LEFT JOIN f4.children f5
      LEFT JOIN f5.produits p
      WHERE p.id is not NULL
      AND p.id IN (SELECT psel.id FROM SogedialSiteBundle:UserSelectedProduct usp LEFT JOIN usp.user u LEFT JOIN usp.produit psel WHERE u.id = :user_id )';
        if ($query != '') {
            $query .= ' AND f3.libelleFamille LIKE :query ';
        }

        $query .= " AND (f1.id IN (SELECT IDENTITY(s.entity) FROM SogedialUserBundle:FamilySelection s WHERE s.user = :user_id  " . (($options) ? ' AND s.' . $options . '=1' : '') . ")
                OR f2.id IN (SELECT IDENTITY(s1.entity) FROM SogedialUserBundle:FamilySelection s1 WHERE s1.user = :user_id  " . (($options) ? ' AND s1.' . $options . '=1' : '') . ")
                OR f3.id IN (SELECT IDENTITY(s2.entity) FROM SogedialUserBundle:FamilySelection s2 WHERE s2.user = :user_id  " . (($options) ? ' AND s2.' . $options . '=1' : '') . ")
                OR f4.id IN (SELECT IDENTITY(s3.entity) FROM SogedialUserBundle:FamilySelection s3 WHERE s3.user = :user_id  " . (($options) ? ' AND s3.' . $options . '=1' : '') . ")
                OR f5.id IN (SELECT IDENTITY(s4.entity) FROM SogedialUserBundle:FamilySelection s4 WHERE s4.user = :user_id  " . (($options) ? ' AND s4.' . $options . '=1' : '') . ")
                OR p.id IN (SELECT IDENTITY(s5.entity) FROM SogedialUserBundle:ProductSelection s5 WHERE s5.user = :user_id  " . (($options) ? ' AND s5.' . $options . '=1' : '') . ") ) ";

        $query .= ' GROUP BY f3.id
                ORDER BY f3.libelleFamille ASC ';


        $r = $this->getEntityManager()
            ->createQuery($query)
            ->setParameter('query', '%' . $q . '%')
            ->setParameter('user_id', $user->getId());

        $rf3 = $r->getResult();

        $query = 'SELECT f4, count(p.id)
      FROM SogedialSiteBundle:Famille f4
      LEFT JOIN f4.parent f3
      LEFT JOIN f3.parent f2
      LEFT JOIN f2.parent f1
      LEFT JOIN f4.children f5
      LEFT JOIN f5.produits p
      WHERE p.id is not NULL
      AND p.id IN (SELECT psel.id FROM SogedialSiteBundle:UserSelectedProduct usp LEFT JOIN usp.user u LEFT JOIN usp.produit psel WHERE u.id = :user_id )';
        if ($query != '') {
            $query .= ' AND f4.libelleFamille LIKE :query ';
        }

        $query .= " AND (f1.id IN (SELECT IDENTITY(s.entity) FROM SogedialUserBundle:FamilySelection s WHERE s.user = :user_id  " . (($options) ? ' AND s.' . $options . '=1' : '') . ")
                OR f2.id IN (SELECT IDENTITY(s1.entity) FROM SogedialUserBundle:FamilySelection s1 WHERE s1.user = :user_id  " . (($options) ? ' AND s1.' . $options . '=1' : '') . ")
                OR f3.id IN (SELECT IDENTITY(s2.entity) FROM SogedialUserBundle:FamilySelection s2 WHERE s2.user = :user_id  " . (($options) ? ' AND s2.' . $options . '=1' : '') . ")
                OR f4.id IN (SELECT IDENTITY(s3.entity) FROM SogedialUserBundle:FamilySelection s3 WHERE s3.user = :user_id  " . (($options) ? ' AND s3.' . $options . '=1' : '') . ")
                OR f5.id IN (SELECT IDENTITY(s4.entity) FROM SogedialUserBundle:FamilySelection s4 WHERE s4.user = :user_id  " . (($options) ? ' AND s4.' . $options . '=1' : '') . ")
                OR p.id IN (SELECT IDENTITY(s5.entity) FROM SogedialUserBundle:ProductSelection s5 WHERE s5.user = :user_id " . (($options) ? ' AND s5.' . $options . '=1' : '') . ") ) ";

        $query .= ' GROUP BY f4.id
                ORDER BY f4.libelleFamille ASC ';

        $rf4 = $this->getEntityManager()
            ->createQuery($query)
            ->setParameter('query', '%' . $q . '%')
            ->setParameter('user_id', $user->getId())
            ->getResult();

        $query = 'SELECT f5, count(p.id)
      FROM SogedialSiteBundle:Famille f5
      LEFT JOIN f5.parent f4
      LEFT JOIN f4.parent f3
      LEFT JOIN f3.parent f2
      LEFT JOIN f2.parent f1
      LEFT JOIN f5.produits p

      WHERE p.id is not NULL
      AND p.id IN (SELECT psel.id FROM SogedialSiteBundle:UserSelectedProduct usp LEFT JOIN usp.user u LEFT JOIN usp.produit psel WHERE u.id = :user_id )';
        if ($query != '') {
            $query .= ' AND f5.libelleFamille LIKE :query ';
        }

        $query .= " AND (f1.id IN (SELECT IDENTITY(s.entity) FROM SogedialUserBundle:FamilySelection s WHERE s.user = :user_id  " . (($options) ? ' AND s.' . $options . '=1' : '') . ")
                OR f2.id IN (SELECT IDENTITY(s1.entity) FROM SogedialUserBundle:FamilySelection s1 WHERE s1.user = :user_id  " . (($options) ? ' AND s1.' . $options . '=1' : '') . ")
                OR f3.id IN (SELECT IDENTITY(s2.entity) FROM SogedialUserBundle:FamilySelection s2 WHERE s2.user = :user_id  " . (($options) ? ' AND s2.' . $options . '=1' : '') . ")
                OR f4.id IN (SELECT IDENTITY(s3.entity) FROM SogedialUserBundle:FamilySelection s3 WHERE s3.user = :user_id  " . (($options) ? ' AND s3.' . $options . '=1' : '') . ")
                OR f5.id IN (SELECT IDENTITY(s4.entity) FROM SogedialUserBundle:FamilySelection s4 WHERE s4.user = :user_id  " . (($options) ? ' AND s4.' . $options . '=1' : '') . ")
                OR p.id IN (SELECT IDENTITY(s5.entity) FROM SogedialUserBundle:ProductSelection s5 WHERE s5.user = :user_id  " . (($options) ? ' AND s5.' . $options . '=1' : '') . ") ) ";

        $query .= ' GROUP BY f5.id
                ORDER BY f5.libelleFamille ASC ';

        $rf5 = $this->getEntityManager()
            ->createQuery($query)
            ->setParameter('query', '%' . $q . '%')
            ->setParameter('user_id', $user->getId())
            ->getResult();

        return array_merge($rf1, $rf2, $rf3, $rf4, $rf5);
    }

    public function findAllFamilleClientJson($q = '')
    {
        $query = 'SELECT DISTINCT f2.libelleFamille
      FROM SogedialSiteBundle:Famille f2
      WHERE f2.type = 2';

        if ($query != '') {
            $query .= ' AND f2.libelleFamille LIKE :query ';
        }

        $query .= ' ORDER BY f2.libelleFamille ASC ';

        $rf2 = $this->getEntityManager()
            ->createQuery($query)
            ->setParameter('query', '%' . $q . '%')
            ->getResult();

        return $rf2;
    }

    public function findFamillesFilter($user, $type, $rayon, $familie, $filterAmbiant, $search, $marque, $photo,$locale)
    {
        if ($type == 1) {
            $query = 'SELECT f1, count(f1.id)
        FROM SogedialSiteBundle:Famille f1
        LEFT JOIN f1.children f2
        LEFT JOIN f2.children f3
        LEFT JOIN f3.children f4
        LEFT JOIN f4.children f5
        LEFT JOIN f5.produits p
        WHERE f1.type = :type
        AND p.id IS NOT NULL AND p.actif=1 ';
            $lvl = 'f1';
        } elseif ($type == 2) {
            $query = 'SELECT f2, count(f2.id)
        FROM SogedialSiteBundle:Famille f2
        LEFT JOIN f2.parent f1
        LEFT JOIN f2.children f3
        LEFT JOIN f3.children f4
        LEFT JOIN f4.children f5
        LEFT JOIN f5.produits p
        WHERE f2.type = :type
        AND p.id IS NOT NULL AND p.actif=1 ';
            $lvl = 'f2';
            // On ajoute un filtre sur les rayon
            if (count($rayon) > 0) {
                $query .= ' AND f1.id IN (' . implode(",", $rayon) . ') ';
            }
        } else {
            $query = 'SELECT f3, count(f3.id)
        FROM SogedialSiteBundle:Famille f3
        LEFT JOIN f3.parent f2
        LEFT JOIN f2.parent f1
        LEFT JOIN f3.children f4
        LEFT JOIN f4.children f5
        LEFT JOIN f5.produits p
        WHERE f3.type = :type
        AND p.id IS NOT NULL AND p.actif=1 ';
            $lvl = 'f3';
            // On ajoute un filtre sur les rayon
            if (count($rayon) > 0) {
                $query .= ' AND f1.id IN (' . implode(",", $rayon) . ') ';
            }
            if (count($familie) > 0) {
                $query .= ' AND f2.id IN (' . implode(",", $familie) . ') ';
            }
        }

        if (count($filterAmbiant) > 0) {
            $query .= " AND p.temperature IN ('" . implode("','", $filterAmbiant) . "') ";
        }

        for ($i = 0; $i < count($search); $i++) {
            // On recherche parmis les id de catégorie
            if (preg_match('/^[0-9]*$/', $search[$i])) {
                $query .= ' AND (f1.id = :query' . $i . ' OR f2.id = :query' . $i . ' OR f3.id = :query' . $i . ' OR f4.id = :query' . $i . ' OR f5.id = :query' . $i . ') ';
                $parameter['query' . $i] = $search[$i];
            } else {
                $query .= ' AND (p.denomination LIKE :query' . $i . '
                OR p.marque LIKE :query' . $i . '
                OR p.ean13 LIKE :query' . $i . '
                OR p.code LIKE :query' . $i . '
                OR p.ingredients LIKE :query' . $i . '
                OR p.denominationCourt LIKE :query' . $i . ') ';
                $parameter['query' . $i] = '%' . trim($search[$i]) . '%';
            }
        }

        for ($i = 0; $i < count($marque); $i++) {
            $query .= ' AND TRIM(p.marque) = :marque' . $i . ' ';
            $parameter['marque' . $i] = $marque[$i];
        }

        $query .= " AND (f1.id IN (SELECT IDENTITY(s.entity) FROM SogedialUserBundle:FamilySelection s WHERE s.user = :user_id )
                OR f2.id IN (SELECT IDENTITY(s1.entity) FROM SogedialUserBundle:FamilySelection s1 WHERE s1.user = :user_id )
                OR f3.id IN (SELECT IDENTITY(s2.entity) FROM SogedialUserBundle:FamilySelection s2 WHERE s2.user = :user_id )
                OR f4.id IN (SELECT IDENTITY(s3.entity) FROM SogedialUserBundle:FamilySelection s3 WHERE s3.user = :user_id )
                OR f5.id IN (SELECT IDENTITY(s4.entity) FROM SogedialUserBundle:FamilySelection s4 WHERE s4.user = :user_id )
                OR p.id IN (SELECT IDENTITY(s5.entity) FROM SogedialUserBundle:ProductSelection s5 WHERE s5.user = :user_id ) ) ";

        $query .= ' GROUP BY ' . $lvl . '.id';

        if ($locale == "fr") {
            $query .= ' ORDER BY ' . $lvl . '.libelleFamille ASC ';
        } else {
            $query .= ' ORDER BY ' . $lvl . '.libelleFamilleEn ASC ';
        }

        $parameter['type'] = $type;
        $parameter['user_id'] = $user->getId();

        $queryb = $this->getEntityManager()->createQuery($query);
        foreach ($parameter as $key => $value) {
            $queryb->setParameter($key, $value);
        }

        return $queryb->getResult();
    }

    public function findSelectedFamillesFilter($user, $type, $rayon, $familie, $filterAmbiant, $search, $marque, $photo)
    {
        if ($type == 1) {
            $query = 'SELECT f1, count(f1.id)
        FROM SogedialSiteBundle:Famille f1
        LEFT JOIN f1.children f2
        LEFT JOIN f2.children f3
        LEFT JOIN f3.children f4
        LEFT JOIN f4.children f5
        LEFT JOIN f5.produits p
        WHERE f1.type = :type
                AND p.id IN (SELECT psel.id FROM SogedialSiteBundle:UserSelectedProduct usp LEFT JOIN usp.user u LEFT JOIN usp.produit psel WHERE u.id = :user_id )
        AND p.id IS NOT NULL AND p.actif=1 ';
            $lvl = 'f1';
        } elseif ($type == 2) {
            $query = 'SELECT f2, count(f2.id)
        FROM SogedialSiteBundle:Famille f2
        LEFT JOIN f2.parent f1
        LEFT JOIN f2.children f3
        LEFT JOIN f3.children f4
        LEFT JOIN f4.children f5
        LEFT JOIN f5.produits p
        WHERE f2.type = :type
                AND p.id IN (SELECT psel.id FROM SogedialSiteBundle:UserSelectedProduct usp LEFT JOIN usp.user u LEFT JOIN usp.produit psel WHERE u.id = :user_id )
        AND p.id IS NOT NULL AND p.actif=1 ';
            $lvl = 'f2';
            // On ajoute un filtre sur les rayon
            if (count($rayon) > 0) {
                $query .= ' AND f1.id IN (' . implode(",", $rayon) . ') ';
            }
        } else {
            $query = 'SELECT f3, count(f3.id)
        FROM SogedialSiteBundle:Famille f3
        LEFT JOIN f3.parent f2
        LEFT JOIN f2.parent f1
        LEFT JOIN f3.children f4
        LEFT JOIN f4.children f5
        LEFT JOIN f5.produits p
        WHERE f3.type = :type
                AND p.id IN (SELECT psel.id FROM SogedialSiteBundle:UserSelectedProduct usp LEFT JOIN usp.user u LEFT JOIN usp.produit psel WHERE u.id = :user_id )
        AND p.id IS NOT NULL AND p.actif=1 ';
            $lvl = 'f3';
            // On ajoute un filtre sur les rayon
            if (count($rayon) > 0) {
                $query .= ' AND f1.id IN (' . implode(",", $rayon) . ') ';
            }
            if (count($familie) > 0) {
                $query .= ' AND f2.id IN (' . implode(",", $familie) . ') ';
            }
        }

        if (count($filterAmbiant) > 0) {
            $query .= " AND p.temperature IN ('" . implode("','", $filterAmbiant) . "') ";
        }

        for ($i = 0; $i < count($search); $i++) {
            // On recherche parmis les id de catégorie
            if (preg_match('/^[0-9]*$/', $search[$i])) {
                $query .= ' AND (f1.id = :query' . $i . ' OR f2.id = :query' . $i . ' OR f3.id = :query' . $i . ' OR f4.id = :query' . $i . ' OR f5.id = :query' . $i . ') ';
                $parameter['query' . $i] = $search[$i];
            } else {
                $query .= ' AND (p.denomination LIKE :query' . $i . '
                OR p.marque LIKE :query' . $i . '
                OR p.ean13 LIKE :query' . $i . '
                OR p.code LIKE :query' . $i . '
                OR p.ingredients LIKE :query' . $i . '
                OR p.denominationCourt LIKE :query' . $i . ') ';
                $parameter['query' . $i] = '%' . trim($search[$i]) . '%';
            }
        }

        for ($i = 0; $i < count($marque); $i++) {
            $query .= ' AND TRIM(p.marque) = :marque' . $i . ' ';
            $parameter['marque' . $i] = $marque[$i];
        }

        $query .= " AND (f1.id IN (SELECT IDENTITY(s.entity) FROM SogedialUserBundle:FamilySelection s WHERE s.user = :user_id )
                OR f2.id IN (SELECT IDENTITY(s1.entity) FROM SogedialUserBundle:FamilySelection s1 WHERE s1.user = :user_id )
                OR f3.id IN (SELECT IDENTITY(s2.entity) FROM SogedialUserBundle:FamilySelection s2 WHERE s2.user = :user_id )
                OR f4.id IN (SELECT IDENTITY(s3.entity) FROM SogedialUserBundle:FamilySelection s3 WHERE s3.user = :user_id )
                OR f5.id IN (SELECT IDENTITY(s4.entity) FROM SogedialUserBundle:FamilySelection s4 WHERE s4.user = :user_id )
                OR p.id IN (SELECT IDENTITY(s5.entity) FROM SogedialUserBundle:ProductSelection s5 WHERE s5.user = :user_id ) ) ";

        $query .= ' GROUP BY ' . $lvl . '.id
                ORDER BY ' . $lvl . '.libelleFamille ASC ';
        $parameter['type'] = $type;
        $parameter['user_id'] = $user->getId();

        $queryb = $this->getEntityManager()->createQuery($query);
        foreach ($parameter as $key => $value) {
            $queryb->setParameter($key, $value);
        }

        return $queryb->getResult();
    }

    public function findFamilleAssortiment(
        $user_id,
        $family,
        $rayon,
        $familie,
        $sfamilie,
        $search,
        $marque,
        $gamme,
        $temp,
        $prix,
        $autre,
        $photo,
        $idProduct
    ) {
        $parameter = array();
        $join = '';
        if ($photo == 1) {
            $join = ' JOIN p.photos ph ';
        } elseif ($photo == 2) {
            $join = ' LEFT JOIN p.photos ph ';
        }
        if (is_null($family)) {
            $query = 'SELECT f1, count(p.id), count(DISTINCT fs2.entity), count(DISTINCT fs3.entity), count(DISTINCT fs4.entity), count(DISTINCT fs4.entity), count(DISTINCT fsp.entity)
                FROM SogedialSiteBundle:Famille f1
                LEFT JOIN f1.children f2
                LEFT JOIN f2.selections fs2 WITH IDENTITY(fs2.user) = :user_id
                LEFT JOIN f2.children f3
                LEFT JOIN f3.selections fs3 WITH IDENTITY(fs3.user) = :user_id
                LEFT JOIN f3.children f4
                LEFT JOIN f4.selections fs4 WITH IDENTITY(fs4.user) = :user_id
                LEFT JOIN f4.children f5
                LEFT JOIN f5.selections fs5 WITH IDENTITY(fs5.user) = :user_id
                JOIN f5.produits p
                LEFT JOIN p.selections fsp WITH IDENTITY(fsp.user) = :user_id ' . $join . '
                WHERE 1 = 1 ';
            $flvl = 'f1';
        } else {
            if ($family->getType() == 1) {
                $query = 'SELECT f2, count(p.id), 0, count(DISTINCT fs3.entity), count(DISTINCT fs4.entity), count(DISTINCT fs4.entity), count(DISTINCT fsp.entity)
                FROM SogedialSiteBundle:Famille f2
                LEFT JOIN f2.parent f1
                LEFT JOIN f2.children f3
                LEFT JOIN f3.selections fs3 WITH IDENTITY(fs3.user) = :user_id
                LEFT JOIN f3.children f4
                LEFT JOIN f4.selections fs4 WITH IDENTITY(fs4.user) = :user_id
                LEFT JOIN f4.children f5
                LEFT JOIN f5.selections fs5 WITH IDENTITY(fs5.user) = :user_id
                JOIN f5.produits p
                LEFT JOIN p.selections fsp WITH IDENTITY(fsp.user) = :user_id ' . $join . '
                WHERE 1 = 1
                AND f1.id = :familyId ';
                $flvl = 'f2';
                $parameter['familyId'] = $family->getId();
            } else {
                if ($family->getType() == 2) {
                    $query = 'SELECT f3, count(p.id), 0, 0, count(DISTINCT fs4.entity), count(DISTINCT fs4.entity), count(DISTINCT fsp.entity)
                FROM SogedialSiteBundle:Famille f3
                LEFT JOIN f3.parent f2
                LEFT JOIN f2.parent f1
                LEFT JOIN f3.children f4
                LEFT JOIN f4.selections fs4 WITH IDENTITY(fs4.user) = :user_id
                LEFT JOIN f4.children f5
                LEFT JOIN f5.selections fs5 WITH IDENTITY(fs5.user) = :user_id
                JOIN f5.produits p
                LEFT JOIN p.selections fsp WITH IDENTITY(fsp.user) = :user_id  ' . $join . '
                WHERE 1 = 1
                AND f2.id = :familyId ';
                    $flvl = 'f3';
                    $parameter['familyId'] = $family->getId();
                } else {
                    if ($family->getType() == 3) {
                        $query = 'SELECT f4, count(p.id), 0, 0, 0, count(DISTINCT fs5.entity), count(DISTINCT fsp.entity)
                FROM SogedialSiteBundle:Famille f4
                LEFT JOIN f4.parent f3
                LEFT JOIN f3.parent f2
                LEFT JOIN f2.parent f1
                LEFT JOIN f4.children f5
                LEFT JOIN f5.selections fs5 WITH IDENTITY(fs5.user) = :user_id
                JOIN f5.produits p
                LEFT JOIN p.selections fsp WITH IDENTITY(fsp.user) = :user_id  ' . $join . '
                WHERE 1 = 1
                AND f3.id = :familyId ';
                        $flvl = 'f4';
                        $parameter['familyId'] = $family->getId();
                    } else {
                        if ($family->getType() == 4) {
                            $query = 'SELECT f5, count(p.id), 0, 0, 0, 0, count(DISTINCT fsp.entity)
                FROM SogedialSiteBundle:Famille f5
                LEFT JOIN f5.parent f4
                LEFT JOIN f4.parent f3
                LEFT JOIN f3.parent f2
                LEFT JOIN f2.parent f1
                JOIN f5.produits p
                LEFT JOIN p.selections fsp WITH IDENTITY(fsp.user) = :user_id  ' . $join . '
                WHERE 1 = 1
                AND f4.id = :familyId ';
                            $flvl = 'f5';
                            $parameter['familyId'] = $family->getId();
                        }
                    }
                }
            }
        }
        $parameter['user_id'] = $user_id;

        if ($photo == 2) {
            $query .= ' AND ph.id IS NULL';
        }

        // On ajout le filtre sur les rayon (famille type =1)
        if (count($rayon) > 0) {
            $query .= ' AND f1.id IN (' . implode(",", $rayon) . ') ';
        }

        // On ajout le filtre sur les familles (famille type =2)
        if (count($familie) > 0) {
            $query .= ' AND f2.id IN (' . implode(",", $familie) . ') ';
        }

        // On ajout le filtre sur les sous familles (famille type =3)
        if (count($sfamilie) > 0) {
            $query .= ' AND f3.id IN (' . implode(",", $sfamilie) . ') ';
        }

        for ($i = 0; $i < count($search); $i++) {
            $query .= '
              AND ( p.denomination LIKE :query' . $i . '
              OR p.marque LIKE :query' . $i . '
              OR p.ean13 LIKE :query' . $i . '
              OR p.code LIKE :query' . $i . '
              OR p.ingredients LIKE :query' . $i . '
              OR p.denominationCourt LIKE :query' . $i . '
              OR f1.libelleFamille LIKE :query' . $i . '
              OR f2.libelleFamille LIKE :query' . $i . '
              OR f3.libelleFamille LIKE :query' . $i . '
              OR f4.libelleFamille LIKE :query' . $i . ') ';

            $parameter['query' . $i] = '%' . trim($search[$i]) . '%';
        }

        for ($i = 0; $i < count($marque); $i++) {
            $query .= ' AND TRIM(p.marque) = :marque' . $i . ' ';
            $parameter['marque' . $i] = $marque[$i];
        }

        // On ajout le filtre sur les gammes (MN, MD et PP)
        for ($i = 0; $i < count($gamme); $i++) {
            $query .= ' AND p.gamme = :gamme' . $i . ' ';
            $parameter['gamme' . $i] = $gamme[$i];
        }

        // On ajout le filtre sur les température ()
        for ($i = 0; $i < count($temp); $i++) {
            $query .= ' AND p.temperature = :temperature' . $i . ' ';
            $parameter['temperature' . $i] = $temp[$i];
        }

        // On ajout le filtre sur les autres (a1, a2, a3 et a4)
        for ($i = 0; $i < count($autre); $i++) {
            if ($autre[$i] == 'a4') {
                $query .= " AND p.pays = 'FR' ";
            } elseif ($autre[$i] == 'gms') {
                $query .= " AND p.gms = 1 ";
            } elseif ($autre[$i] == 'rhf') {
                $query .= " AND p.rhf = 1 ";
            } elseif ($autre[$i] == 'rhfgms') {
                $query .= " AND p.gms = 1 AND p.rhf = 1 ";
            }
        }

        // On ajoute un filtre sur les prix
        if (count($prix) == 2) {
            $query .= " AND p.prix  > " . $prix[0] . " AND p.prix < " . $prix[1] . " ";
        }

        // On ajoute un filtre sur le produit
        if ($idProduct) {
            $query .= " AND p.id = :idProduct ";
            $parameter['idProduct'] = $idProduct;
        }

        $query .= '
      GROUP BY ' . $flvl . '.id
      ORDER BY ' . $flvl . '.id ASC ';

        $queryb = $this->getEntityManager()->createQuery($query);
        foreach ($parameter as $key => $value) {
            $queryb->setParameter($key, $value);
        }

        return $queryb->getResult();

    }

    public function findFamillesFromProduct(
        $user,
        $search,
        $family_id,
        $family_type,
        $gamme,
        $temp,
        $prix,
        $autre,
        $sub = false
    ) {
        if (is_null($family_id)) {
            $query = 'SELECT f1, count(f1.id)
          FROM SogedialSiteBundle:Famille f1
          LEFT JOIN f1.children f2
          LEFT JOIN f2.children f3
          LEFT JOIN f3.children f4
          LEFT JOIN f4.children f5
          LEFT JOIN f5.produits p
          WHERE f1.type = :type';

            // Filtre par permission
            $query .= " AND (f1.id IN (SELECT IDENTITY(s.entity) FROM SogedialUserBundle:FamilySelection s WHERE s.user = :user_id )
            OR f2.id IN (SELECT IDENTITY(s1.entity) FROM SogedialUserBundle:FamilySelection s1 WHERE s1.user = :user_id )
            OR f3.id IN (SELECT IDENTITY(s2.entity) FROM SogedialUserBundle:FamilySelection s2 WHERE s2.user = :user_id )
            OR f4.id IN (SELECT IDENTITY(s3.entity) FROM SogedialUserBundle:FamilySelection s3 WHERE s3.user = :user_id )
            OR f5.id IN (SELECT IDENTITY(s4.entity) FROM SogedialUserBundle:FamilySelection s4 WHERE s4.user = :user_id )
            OR p.id IN (SELECT IDENTITY(s5.entity) FROM SogedialUserBundle:ProductSelection s5 WHERE s5.user = :user_id ) ) ";
            $family_type = 1;
            $parameter['type'] = $family_type;
            $flvl = 'f1';
        } else {
            if ($sub) {
                if ($family_type == 1) {
                    $query = 'SELECT f2, count(f2.id)
          FROM SogedialSiteBundle:Famille f2
          LEFT JOIN f2.children f3
          LEFT JOIN f3.children f4
          LEFT JOIN f4.children f5
          LEFT JOIN f5.produits p
          LEFT JOIN f2.parent f1
          WHERE f2.parent = :family_id ';

                    // Filtre par permission
                    $query .= " AND (f1.id IN (SELECT IDENTITY(s.entity) FROM SogedialUserBundle:FamilySelection s WHERE s.user = :user_id )
                OR f2.id IN (SELECT IDENTITY(s1.entity) FROM SogedialUserBundle:FamilySelection s1 WHERE s1.user = :user_id )
                OR f3.id IN (SELECT IDENTITY(s2.entity) FROM SogedialUserBundle:FamilySelection s2 WHERE s2.user = :user_id )
                OR f4.id IN (SELECT IDENTITY(s3.entity) FROM SogedialUserBundle:FamilySelection s3 WHERE s3.user = :user_id )
                OR f5.id IN (SELECT IDENTITY(s4.entity) FROM SogedialUserBundle:FamilySelection s4 WHERE s4.user = :user_id )
                OR p.id IN (SELECT IDENTITY(s5.entity) FROM SogedialUserBundle:ProductSelection s5 WHERE s5.user = :user_id ) ) ";
                    $flvl = 'f2';
                } elseif ($family_type == 2) {
                    $query = 'SELECT f3, count(f3.id)
          FROM SogedialSiteBundle:Famille f3
          LEFT JOIN f3.children f4
          LEFT JOIN f4.children f5
          LEFT JOIN f5.produits p
          LEFT JOIN f3.parent f2
          LEFT JOIN f2.parent f1
          WHERE f3.parent = :family_id ';

                    // Filtre par permission
                    $query .= " AND (f1.id IN (SELECT IDENTITY(s.entity) FROM SogedialUserBundle:FamilySelection s WHERE s.user = :user_id )
                OR f2.id IN (SELECT IDENTITY(s1.entity) FROM SogedialUserBundle:FamilySelection s1 WHERE s1.user = :user_id )
                OR f3.id IN (SELECT IDENTITY(s2.entity) FROM SogedialUserBundle:FamilySelection s2 WHERE s2.user = :user_id )
                OR f4.id IN (SELECT IDENTITY(s3.entity) FROM SogedialUserBundle:FamilySelection s3 WHERE s3.user = :user_id )
                OR f5.id IN (SELECT IDENTITY(s4.entity) FROM SogedialUserBundle:FamilySelection s4 WHERE s4.user = :user_id )
                OR p.id IN (SELECT IDENTITY(s5.entity) FROM SogedialUserBundle:ProductSelection s5 WHERE s5.user = :user_id ) ) ";
                    $flvl = 'f3';
                } elseif ($family_type == 3) {
                    $query = 'SELECT f4, count(f4.id)
          FROM SogedialSiteBundle:Famille f4
          LEFT JOIN f4.children f5
          LEFT JOIN f5.produits p
          LEFT JOIN f4.parent f3
          LEFT JOIN f3.parent f2
          LEFT JOIN f2.parent f1
          WHERE f4.parent = :family_id ';

                    // Filtre par permission
                    $query .= " AND (f1.id IN (SELECT IDENTITY(s.entity) FROM SogedialUserBundle:FamilySelection s WHERE s.user = :user_id)
                OR f2.id IN (SELECT IDENTITY(s1.entity) FROM SogedialUserBundle:FamilySelection s1 WHERE s1.user = :user_id )
                OR f3.id IN (SELECT IDENTITY(s2.entity) FROM SogedialUserBundle:FamilySelection s2 WHERE s2.user = :user_id )
                OR f4.id IN (SELECT IDENTITY(s3.entity) FROM SogedialUserBundle:FamilySelection s3 WHERE s3.user = :user_id )
                OR f5.id IN (SELECT IDENTITY(s4.entity) FROM SogedialUserBundle:FamilySelection s4 WHERE s4.user = :user_id )
                OR p.id IN (SELECT IDENTITY(s5.entity) FROM SogedialUserBundle:ProductSelection s5 WHERE s5.user = :user_id) ) ";
                    $flvl = 'f4';
                } elseif ($family_type == 4) {
                    $query = 'SELECT f4, count(f4.id)
          FROM SogedialSiteBundle:Famille f4
          LEFT JOIN f4.children f5
          LEFT JOIN f5.produits p
          LEFT JOIN f4.parent f3
          LEFT JOIN f3.parent f2
          LEFT JOIN f2.parent f1
          WHERE f4.id = :family_id ';

                    // Filtre par permission
                    $query .= " AND (f1.id IN (SELECT IDENTITY(s.entity) FROM SogedialUserBundle:FamilySelection s WHERE s.user = :user_id )
                OR f2.id IN (SELECT IDENTITY(s1.entity) FROM SogedialUserBundle:FamilySelection s1 WHERE s1.user = :user_id )
                OR f3.id IN (SELECT IDENTITY(s2.entity) FROM SogedialUserBundle:FamilySelection s2 WHERE s2.user = :user_id )
                OR f4.id IN (SELECT IDENTITY(s3.entity) FROM SogedialUserBundle:FamilySelection s3 WHERE s3.user = :user_id )
                OR f5.id IN (SELECT IDENTITY(s4.entity) FROM SogedialUserBundle:FamilySelection s4 WHERE s4.user = :user_id )
                OR p.id IN (SELECT IDENTITY(s5.entity) FROM SogedialUserBundle:ProductSelection s5 WHERE s5.user = :user_id ) ) ";
                    $flvl = 'f4';
                }
            } else {
                if ($family_type == 1) {
                    $query = 'SELECT f1, count(f1.id)
          FROM SogedialSiteBundle:Famille f1
          LEFT JOIN f1.children f2
          LEFT JOIN f2.children f3
          LEFT JOIN f3.children f4
          LEFT JOIN f4.children f5
          LEFT JOIN f5.produits p
          WHERE f1.type = :type
          AND f1.id = :family_id ';

                    // Filtre par permission
                    $query .= " AND (f1.id IN (SELECT IDENTITY(s.entity) FROM SogedialUserBundle:FamilySelection s WHERE s.user = :user_id )
            OR f2.id IN (SELECT IDENTITY(s1.entity) FROM SogedialUserBundle:FamilySelection s1 WHERE s1.user = :user_id )
            OR f3.id IN (SELECT IDENTITY(s2.entity) FROM SogedialUserBundle:FamilySelection s2 WHERE s2.user = :user_id )
            OR f4.id IN (SELECT IDENTITY(s3.entity) FROM SogedialUserBundle:FamilySelection s3 WHERE s3.user = :user_id )
            OR f5.id IN (SELECT IDENTITY(s4.entity) FROM SogedialUserBundle:FamilySelection s4 WHERE s4.user = :user_id )
            OR p.id IN (SELECT IDENTITY(s5.entity) FROM SogedialUserBundle:ProductSelection s5 WHERE s5.user = :user_id ) ) ";
                    $flvl = 'f1';
                } elseif ($family_type == 2) {
                    $query = 'SELECT f2, count(f2.id)
          FROM SogedialSiteBundle:Famille f2
          LEFT JOIN f2.children f3
          LEFT JOIN f3.children f4
          LEFT JOIN f4.children f5
          LEFT JOIN f5.produits p
          LEFT JOIN f2.parent f1
          WHERE f2.type = :type
          AND f2.id = :family_id ';

                    // Filtre par permission
                    $query .= " AND (f1.id IN (SELECT IDENTITY(s.entity) FROM SogedialUserBundle:FamilySelection s WHERE s.user = :user_id )
            OR f2.id IN (SELECT IDENTITY(s1.entity) FROM SogedialUserBundle:FamilySelection s1 WHERE s1.user = :user_id )
            OR f3.id IN (SELECT IDENTITY(s2.entity) FROM SogedialUserBundle:FamilySelection s2 WHERE s2.user = :user_id )
            OR f4.id IN (SELECT IDENTITY(s3.entity) FROM SogedialUserBundle:FamilySelection s3 WHERE s3.user = :user_id )
            OR f5.id IN (SELECT IDENTITY(s4.entity) FROM SogedialUserBundle:FamilySelection s4 WHERE s4.user = :user_id )
            OR p.id IN (SELECT IDENTITY(s5.entity) FROM SogedialUserBundle:ProductSelection s5 WHERE s5.user = :user_id ) ) ";
                    $flvl = 'f2';
                } elseif ($family_type == 3) {
                    $query = 'SELECT f3, count(f3.id)
          FROM SogedialSiteBundle:Famille f3
          LEFT JOIN f3.children f4
          LEFT JOIN f4.children f5
          LEFT JOIN f5.produits p
          LEFT JOIN f3.parent f2
          LEFT JOIN f2.parent f1
          WHERE f3.type = :type
          AND f3.id = :family_id ';

                    // Filtre par permission
                    $query .= " AND (f1.id IN (SELECT IDENTITY(s.entity) FROM SogedialUserBundle:FamilySelection s WHERE s.user = :user_id )
            OR f2.id IN (SELECT IDENTITY(s1.entity) FROM SogedialUserBundle:FamilySelection s1 WHERE s1.user = :user_id )
            OR f3.id IN (SELECT IDENTITY(s2.entity) FROM SogedialUserBundle:FamilySelection s2 WHERE s2.user = :user_id )
            OR f4.id IN (SELECT IDENTITY(s3.entity) FROM SogedialUserBundle:FamilySelection s3 WHERE s3.user = :user_id )
            OR f5.id IN (SELECT IDENTITY(s4.entity) FROM SogedialUserBundle:FamilySelection s4 WHERE s4.user = :user_id )
            OR p.id IN (SELECT IDENTITY(s5.entity) FROM SogedialUserBundle:ProductSelection s5 WHERE s5.user = :user_id ) ) ";
                    $flvl = 'f3';
                } elseif ($family_type == 4) {
                    $query = 'SELECT f3, count(f3.id)
          FROM SogedialSiteBundle:Famille f3
          LEFT JOIN f3.children f4
          LEFT JOIN f4.children f5
          LEFT JOIN f5.produits p
          LEFT JOIN f3.parent f2
          LEFT JOIN f2.parent f1
          WHERE f4.type = :type
          AND f4.id = :family_id ';

                    // Filtre par permission
                    $query .= " AND (f1.id IN (SELECT IDENTITY(s.entity) FROM SogedialUserBundle:FamilySelection s WHERE s.user = :user_id )
            OR f2.id IN (SELECT IDENTITY(s1.entity) FROM SogedialUserBundle:FamilySelection s1 WHERE s1.user = :user_id )
            OR f3.id IN (SELECT IDENTITY(s2.entity) FROM SogedialUserBundle:FamilySelection s2 WHERE s2.user = :user_id )
            OR f4.id IN (SELECT IDENTITY(s3.entity) FROM SogedialUserBundle:FamilySelection s3 WHERE s3.user = :user_id )
            OR f5.id IN (SELECT IDENTITY(s4.entity) FROM SogedialUserBundle:FamilySelection s4 WHERE s4.user = :user_id )
            OR p.id IN (SELECT IDENTITY(s5.entity) FROM SogedialUserBundle:ProductSelection s5 WHERE s5.user = :user_id ) ) ";
                    $flvl = 'f3';
                }
                $parameter['type'] = $family_type;
            }
            $parameter['family_id'] = $family_id;
        }
        $parameter['user_id'] = $user->getId();

        for ($i = 0; $i < count($search); $i++) {
            $query .= '
              AND ( p.denomination LIKE :query' . $i . '
              OR p.marque LIKE :query' . $i . '
              OR p.ean13 LIKE :query' . $i . '
              OR p.code LIKE :query' . $i . '
              OR p.ingredients LIKE :query' . $i . '
              OR p.denominationCourt LIKE :query' . $i . '
              OR f1.libelleFamille LIKE :query' . $i . '
              OR f2.libelleFamille LIKE :query' . $i . '
              OR f3.libelleFamille LIKE :query' . $i . '
              OR f4.libelleFamille LIKE :query' . $i . ') ';

            $parameter['query' . $i] = '%' . trim($search[$i]) . '%';
        }

        // On ajout le filtre sur les gammes (MN, MD et PP)
        for ($i = 0; $i < count($gamme); $i++) {
            $query .= ' AND p.gamme = :gamme' . $i . ' ';
            $parameter['gamme' . $i] = $gamme[$i];
        }

        // On ajout le filtre sur les température ()
        for ($i = 0; $i < count($temp); $i++) {
            $query .= ' AND p.temperature = :temperature' . $i . ' ';
            $parameter['temperature' . $i] = $temp[$i];
        }

        // On ajout le filtre sur les autres (a1, a2, a3 et a4)
        for ($i = 0; $i < count($autre); $i++) {
            if ($autre[$i] == 'a4') {
                $query .= " AND p.pays = 'FR' ";
            } elseif ($autre[$i] == 'gms') {
                if ($firstParam) {
                    $query .= " WHERE p.gms = 1 ";
                    $firstParam = false;
                } else {
                    $query .= " AND p.gms = 1 ";
                }
            } elseif ($autre[$i] == 'rhf') {
                if ($firstParam) {
                    $query .= " WHERE p.rhf = 1 ";
                    $firstParam = false;
                } else {
                    $query .= " AND p.rhf = 1 ";
                }
            } elseif ($autre[$i] == 'rhfgms') {
                if ($firstParam) {
                    $query .= " WHERE p.gms = 1 AND p.rhf = 1 ";
                    $firstParam = false;
                } else {
                    $query .= " AND p.gms = 1 AND p.rhf = 1 ";
                }
            } else {
                if ($autre[$i] == 'a1') {
                    $req_autre = 'show_exclusivity';
                } elseif ($autre[$i] == 'a2') {
                    $req_autre = 'is_new';
                } else {
                    $req_autre = 'show_promotion';
                }

                $query .= " AND (f1.id IN (SELECT IDENTITY(s6" . $i . ".entity) FROM SogedialUserBundle:FamilySelection s6" . $i . " WHERE s6" . $i . ".user = :user_id AND s6" . $i . "." . $req_autre . "=1 )
                OR f2.id IN (SELECT IDENTITY(s7" . $i . ".entity) FROM SogedialUserBundle:FamilySelection s7" . $i . " WHERE s7" . $i . ".user = :user_id AND s7" . $i . "." . $req_autre . "=1 )
                OR f3.id IN (SELECT IDENTITY(s8" . $i . ".entity) FROM SogedialUserBundle:FamilySelection s8" . $i . " WHERE s8" . $i . ".user = :user_id AND s8" . $i . "." . $req_autre . "=1 )
                OR f4.id IN (SELECT IDENTITY(s9" . $i . ".entity) FROM SogedialUserBundle:FamilySelection s9" . $i . " WHERE s9" . $i . ".user = :user_id AND s9" . $i . "." . $req_autre . "=1 )
                OR f5.id IN (SELECT IDENTITY(s10" . $i . ".entity) FROM SogedialUserBundle:FamilySelection s10" . $i . " WHERE s10" . $i . ".user = :user_id AND s10" . $i . "." . $req_autre . "=1 )
                OR p.id IN (SELECT IDENTITY(s11" . $i . ".entity) FROM SogedialUserBundle:ProductSelection s11" . $i . " WHERE s11" . $i . ".user = :user_id AND s11" . $i . "." . $req_autre . "=1) ) ";
            }
        }


        // On ajoute un filtre sur les prix
        if (count($prix) == 2) {
            $query .= " AND (SELECT MIN(co.coefficient) * p.prix
                    FROM SogedialUserBundle:FamilySelection co
                    WHERE co.user = :user_id
                    AND ( (f1.id = co.entity) OR
                          (f2.id = co.entity) OR
                          (f3.id = co.entity) OR
                          (f4.id = co.entity) OR
                          (f5.id = co.entity)) ) > " . $prix[0] . " AND

            (SELECT MIN(co2.coefficient) * p.prix
                    FROM SogedialUserBundle:FamilySelection co2
                    WHERE co2.user = :user_id
                    AND ( (f1.id = co2.entity) OR
                          (f2.id = co2.entity) OR
                          (f3.id = co2.entity) OR
                          (f4.id = co2.entity) OR
                          (f5.id = co2.entity)) ) < " . $prix[1] . " ";
        }


        $query .= '
      AND p.id is not NULL
      GROUP BY ' . $flvl . '.id
      ORDER BY ' . $flvl . '.valeurFamille ASC ';

        $queryb = $this->getEntityManager()->createQuery($query);
        foreach ($parameter as $key => $value) {
            $queryb->setParameter($key, $value);
        }

        return $queryb->getResult();
    }

    public function isSelectedFamily($family, $user_id)
    {
        if ($family->getType() == 1) {
            $query = 'SELECT f1
                FROM SogedialSiteBundle:Famille f1
                LEFT JOIN f1.children f2
                LEFT JOIN f2.children f3
                LEFT JOIN f3.children f4
                LEFT JOIN f4.children f5
                JOIN f5.produits p
                WHERE 1 = 1
                AND f1.id = :family_id ';
            $query .= " AND (f1.id IN (SELECT IDENTITY(s.entity) FROM SogedialUserBundle:FamilySelection s WHERE s.user = :user_id )
            OR f2.id IN (SELECT IDENTITY(s1.entity) FROM SogedialUserBundle:FamilySelection s1 WHERE s1.user = :user_id )
            OR f3.id IN (SELECT IDENTITY(s2.entity) FROM SogedialUserBundle:FamilySelection s2 WHERE s2.user = :user_id )
            OR f4.id IN (SELECT IDENTITY(s3.entity) FROM SogedialUserBundle:FamilySelection s3 WHERE s3.user = :user_id )
            OR f5.id IN (SELECT IDENTITY(s4.entity) FROM SogedialUserBundle:FamilySelection s4 WHERE s4.user = :user_id )
            OR p.id IN (SELECT IDENTITY(s5.entity) FROM SogedialUserBundle:ProductSelection s5 WHERE s5.user = :user_id ) ) ";
        } elseif ($family->getType() == 2) {
            $query = 'SELECT f2
                FROM SogedialSiteBundle:Famille f2
                LEFT JOIN f2.children f3
                LEFT JOIN f3.children f4
                LEFT JOIN f4.children f5
                JOIN f5.produits p
                WHERE 1 = 1
                AND f2.id = :family_id ';
            $query .= " AND (f2.id IN (SELECT IDENTITY(s1.entity) FROM SogedialUserBundle:FamilySelection s1 WHERE s1.user = :user_id )
            OR f3.id IN (SELECT IDENTITY(s2.entity) FROM SogedialUserBundle:FamilySelection s2 WHERE s2.user = :user_id )
            OR f4.id IN (SELECT IDENTITY(s3.entity) FROM SogedialUserBundle:FamilySelection s3 WHERE s3.user = :user_id )
            OR f5.id IN (SELECT IDENTITY(s4.entity) FROM SogedialUserBundle:FamilySelection s4 WHERE s4.user = :user_id )
            OR p.id IN (SELECT IDENTITY(s5.entity) FROM SogedialUserBundle:ProductSelection s5 WHERE s5.user = :user_id ) ) ";
        } elseif ($family->getType() == 3) {
            $query = 'SELECT f3
                FROM SogedialSiteBundle:Famille f3
                LEFT JOIN f3.children f4
                LEFT JOIN f4.children f5
                JOIN f5.produits p
                WHERE 1 = 1
                AND f3.id = :family_id ';
            $query .= " AND (f3.id IN (SELECT IDENTITY(s2.entity) FROM SogedialUserBundle:FamilySelection s2 WHERE s2.user = :user_id )
            OR f4.id IN (SELECT IDENTITY(s3.entity) FROM SogedialUserBundle:FamilySelection s3 WHERE s3.user = :user_id )
            OR f5.id IN (SELECT IDENTITY(s4.entity) FROM SogedialUserBundle:FamilySelection s4 WHERE s4.user = :user_id )
            OR p.id IN (SELECT IDENTITY(s5.entity) FROM SogedialUserBundle:ProductSelection s5 WHERE s5.user = :user_id ) ) ";
        } elseif ($family->getType() == 4) {
            $query = 'SELECT f4
                FROM SogedialSiteBundle:Famille f4
                LEFT JOIN f4.children f5
                JOIN f5.produits p
                WHERE 1 = 1
                AND f4.id = :family_id ';
            $query .= " AND (f4.id IN (SELECT IDENTITY(s3.entity) FROM SogedialUserBundle:FamilySelection s3 WHERE s3.user = :user_id )
            OR f5.id IN (SELECT IDENTITY(s4.entity) FROM SogedialUserBundle:FamilySelection s4 WHERE s4.user = :user_id )
            OR p.id IN (SELECT IDENTITY(s5.entity) FROM SogedialUserBundle:ProductSelection s5 WHERE s5.user = :user_id ) ) ";
        } else {
            $query = 'SELECT f5
                FROM SogedialSiteBundle:Famille f5
                JOIN f5.produits p
                WHERE 1 = 1
                AND f5.id = :family_id ';
            $query .= " AND (f5.id IN (SELECT IDENTITY(s4.entity) FROM SogedialUserBundle:FamilySelection s4 WHERE s4.user = :user_id )
            OR p.id IN (SELECT IDENTITY(s5.entity) FROM SogedialUserBundle:ProductSelection s5 WHERE s5.user = :user_id ) ) ";
        }

        $queryb = $this->getEntityManager()->createQuery($query);

        $queryb->setParameter('family_id', $family->getId());
        $queryb->setParameter('user_id', $user_id);

        $res = $queryb->getResult();

        //var_dump($res);
        return (count($res) > 0);
    }

    public function getParentFamilyByIdAndType($id, $type)
    {
        $qb = $this->_em->createQueryBuilder();

        $qb
            ->select('p.id,p.marque, p.denominationCourt, p.pcb, p.ean13, p.temperature, p.prix')
            ->from('SogedialSiteBundle:Famille', 'f')
            ->addSelect('ph.source')
            ->addSelect('f.id as familleId, f.type as familleType')
            ->addSelect(
                'c.poidsBrutUVC, c.volumeColis'
            )//            ->addSelect("9 * REPLACE(c.volumeColis, ',', '.') * 1 as test")
        ;

        $qb
            ->leftJoin('usp.produit', 'p')
            ->leftJoin('p.famille', 'f')
            ->leftJoin('p.colis', 'c')
            ->leftJoin(
                'Sogedial\SiteBundle\Entity\Photo',
                'ph',
                \Doctrine\ORM\Query\Expr\Join::WITH,
                'ph.produit = p'
            )
            ->andWhere('usp.user = :user')
            ->andWhere('p.id NOT IN(:productIdsWithQuantity)');


        $qb->setParameter('user', $user);
        $qb->setParameter('productIdsWithQuantity', $productIdsWithQuantity);

//        var_dump($qb->getQuery()->getSQL());
        return $qb->getQuery()->getScalarResult();

    }

}
